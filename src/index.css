@tailwind base;
@tailwind components;
@tailwind utilities;

.animated img {    
	clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);    
	animation: border-transform 10s linear infinite alternate forwards;    
	border-radius: 100%;
}

/* Keyframes for the border-radius transformation */
@keyframes border-transform {    
	0%, 100% {        
		border-radius: 63% 37% 54% 46% / 55% 48% 52% 45%;    
	}    
	14% {        
		border-radius: 40% 60% 54% 46% / 49% 60% 40% 51%;    
	}    
	28% {        
		border-radius: 54% 46% 38% 62% / 49% 70% 30% 51%;    
	}    
	42% {        
		border-radius: 61% 39% 55% 45% / 61% 38% 62% 39%;    
	}    
	56% {        
		border-radius: 61% 39% 67% 33% / 70% 50% 50% 30%;    
	}    
	70% {        
		border-radius: 50% 50% 34% 66% / 56% 68% 32% 44%;    
	}    
	84% {        
		border-radius: 46% 54% 50% 50% / 35% 61% 39% 65%;    
	}
}

/* Sticky header background color */
[data-scroll-listener="true"] #sinatra-header-inner {    
	background: rgba(0, 0, 0, 0.6);
}

/* styles.css */

.playwrite-cl-title {
    font-family: "Playwrite CL", cursive;
    font-optical-sizing: auto;
    font-weight: 300;
    font-style: normal;
  }
  
  .roboto-condensed-heading {
    font-family: "Roboto Condensed", sans-serif;
    font-optical-sizing: auto;
    font-weight: 700;
    font-style: normal;
  }
  
  .playwrite-pe-subtitle {
    font-family: "Playwrite PE", cursive;
    font-optical-sizing: auto;
    font-weight: 200;
    font-style: normal;
  }
  
  .playwrite-cu-caption {
    font-family: "Playwrite CU", cursive;
    font-optical-sizing: auto;
    font-weight: 100;
    font-style: normal;
  }
  
  /* Adjusted .cta styles for responsiveness */
.cta {
	display: inline-block;
	padding: 10px 24px; /* Increased padding for better touchability */
	color: white;
	background-color: goldenrod;
	border: 2px solid goldenrod;
	font-size: 1.5rem; /* Adjusted font size for smaller screens */
	text-transform: uppercase;
	letter-spacing: 0.1rem;
	margin-top: 20px; /* Reduced margin-top for better alignment */
	transition: background-color 0.3s ease, color 0.3s ease;
  }
  
  .cta:hover {
	color: goldenrod;
	background-color: transparent;
  }
  
  /* Adjusted overlay to cover entire section */
  #hero::after {
	content: '';
	position: absolute;
	left: 0;
	top: 0;
	height: 100%;
	width: 100%;
	opacity: 0.7;
	z-index: -1;
  }
  
  /* Adjusted .hero container for responsive content */
  #hero .hero {
	max-width: 100%; /* Full width on smaller screens */
	margin: 0 auto;
	padding: 0 20px; /* Reduced padding for smaller screens */
	justify-content: flex-start;
  }
  
  /* Adjusted text sizes for responsiveness */
  #hero h1 {
	display: block;
	width: fit-content;
	font-size: 3rem; /* Adjusted base font size */
	position: relative;
	color: transparent;
	animation: text_reveal 0.5s ease forwards;
	animation-delay: 1s;
  }
  
  #hero h1:nth-child(1) {
	animation-delay: 1s;
  }
  
  #hero h1:nth-child(2) {
	animation-delay: 2s;
  }
  
  #hero h1:nth-child(3) {
	animation: text_reveal_name 0.5s ease forwards;
	animation-delay: 3s;
  }
  
  #hero h1 span {
	position: absolute;
	top: 0;
	left: 0;
	height: 100%;
	width: 0;
	background-color: goldenrod;
	animation: text_reveal_box 1s ease;
	animation-delay: 0.5s;
  }
  
  #hero h1:nth-child(1) span {
	animation-delay: 0.5s;
  }
  
  #hero h1:nth-child(2) span {
	animation-delay: 1.5s;
  }
  
  #hero h1:nth-child(3) span {
	animation-delay: 2.5s;
  }
  
  /* End Keyframes */
  @keyframes text_reveal_box {
	50% {
	  width: 100%;
	  left: 0;
	}
	100% {
	  width: 0;
	  left: 100%;
	}
  }
  
  @keyframes text_reveal {
	100% {
	  color: rgb(124, 123, 119);
	}
  }
  
  @keyframes text_reveal_name {
	100% {
	  color: goldenrod;
	}
  }
  

/* CSS animation */
@keyframes rotate {
	0% {
	  transform: rotateY(0deg);
	}
	50% {
	  transform: rotateY(360deg);
	}
	100% {
	  transform: rotateY(360deg);
	}
  }
  
  /* Apply animation to each character */
  #rotating-text {
	display: inline-block;
  }
  
  #rotating-text span {
	display: inline-block;
	animation: rotate 2s infinite linear;
	animation-delay: calc(0.01s * var(--index));
  }
  /*-------------------------------------------*/
  /* CSS animation */
@keyframes rotatex {
	0% {
	  transform: rotateX(0deg);
	}
	50% {
	  transform: rotateX(360deg);
	}
	100% {
	  transform: rotateX(360deg);
	}
  }
  
  /* Apply animation to each character */
  #rotating-p {
	display: inline-block;
  }
  
  #rotating-p span {
	display: inline-block;
	animation: rotatex 1s infinite linear;
	animation-delay: calc(0.001s * var(--index));
  }
  #rotating-p2 {
	display: inline-block;
  }
  
  #rotating-p2 span {
	display: inline-block;
	animation: rotatex 1s infinite linear;
	animation-delay: calc(0.001s * var(--index));
  }
  
/*This portion for project*/


.slider{
  width: 100%;
  height: var(--height);
  overflow: hidden;
  mask-image: linear-gradient(
      to right,
      transparent,
      #000 10% 90%,
      transparent
  );
}
.slider .list{
  display: flex;
  width: 100%;
  min-width: calc(var(--width) * var(--quantity));
  position: relative;
}
.slider .list .item{
  width: var(--width);
  height: var(--height);
  position: absolute;
  left: 100%;
  animation: autoRun 10s linear infinite;
  transition: filter 0.5s;
  animation-delay: calc( (10s / var(--quantity)) * (var(--position) - 1) )!important;
}
.slider .list .item img{
  width: 100%;
}
@keyframes autoRun{
  from{
      left: 100%;
  }to{
      left: calc(var(--width) * -1);
  }
}
.slider:hover .item{
  animation-play-state: paused!important;
  filter: grayscale(1);
}
.slider .item:hover{
  filter: grayscale(0);
}
.slider[reverse="true"] .item{
  animation: reversePlay 10s linear infinite;
}
@keyframes reversePlay{
  from{
      left: calc(var(--width) * -1);
  }to{
      left: 100%;
  }
}